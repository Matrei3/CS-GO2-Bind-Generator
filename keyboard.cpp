#include <qwidget.h>
#include <qformlayout.h>
#include <QPushButton>
#include <QFrame>
#include "keyboard key.cpp"
#include "observer.cpp"
#include <qlineedit.h>
using namespace std;

class Keyboard : public QWidget{
private:
	QFormLayout* layout = new QFormLayout;
	map<string, Key*> keys;
	Key* esc = new Key("Esc",keys);
	Key* f1 = new Key("F1",keys);
	Key* f2 = new Key("F2",keys);
	Key* f3 = new Key("F3",keys);
	Key* f4 = new Key("F4",keys);
	Key* f5 = new Key("F5",keys);
	Key* f6 = new Key("F6",keys);
	Key* f7 = new Key("F7",keys);
	Key* f8 = new Key("F8",keys);
	Key* f9 = new Key("F9",keys);
	Key* f10 = new Key("F10",keys);
	Key* f11 = new Key("F11",keys);
	Key* f12 = new Key("F12",keys);
	Key* tilda = new Key("`",keys);
	Key* one = new Key("1",keys);
	Key* two = new Key("2",keys);
	Key* three = new Key("3",keys);
	Key* four = new Key("4",keys);
	Key* five = new Key("5",keys);
	Key* six = new Key("6",keys);
	Key* seven = new Key("7",keys);
	Key* eight = new Key("8",keys);
	Key* nine = new Key("9",keys);
	Key* zero = new Key("0",keys);
	Key* minus = new Key("-",keys);
	Key* equal = new Key("=",keys);
	Key* backspace = new Key("← Backspace",keys);
	Key* tab = new Key("Tab",keys);
	Key* q = new Key("Q",keys);
	Key* w = new Key("W",keys);
	Key* e = new Key("E",keys);
	Key* r = new Key("R",keys);
	Key* t = new Key("T",keys);
	Key* y = new Key("Y",keys);
	Key* u = new Key("U",keys);
	Key* i = new Key("I",keys);
	Key* o = new Key("O",keys);
	Key* p = new Key("P",keys);
	Key* left_paranthesis = new Key("[",keys);
	Key* right_paranthesis = new Key("]",keys);
	Key* back_slash = new Key("\\",keys);
	Key* caps_lock = new Key("Caps Lock",keys);
	Key* a = new Key("A",keys);
	Key* s = new Key("S",keys);
	Key* d = new Key("D",keys);
	Key* f = new Key("F",keys);
	Key* g = new Key("G",keys);
	Key* h = new Key("H",keys);
	Key* j = new Key("J",keys);
	Key* k = new Key("K",keys);
	Key* l = new Key("L",keys);
	Key* semi_colon = new Key(";",keys);
	Key* quotaion_marks = new Key("'",keys);
	Key* shift = new Key("Shift",keys);
	Key* z = new Key("Z",keys);
	Key* x = new Key("X",keys);
	Key* c = new Key("C",keys);
	Key* v = new Key("V",keys);
	Key* b = new Key("B",keys);
	Key* n = new Key("N",keys);
	Key* m = new Key("M",keys);
	Key* comma = new Key(",",keys);
	Key* dot = new Key(".",keys);
	Key* slash = new Key("/",keys);
	Key* right_shift = new Key("rShift",keys);
	Key* ctrl = new Key("Ctrl",keys);
	Key* windows = new Key("Windows",keys);
	Key* right_windows = new Key("Windows",keys);
	Key* alt = new Key("Alt",keys);
	Key* space_bar = new Key("Space",keys);
	Key* right_alt = new Key("rAlt",keys);
	Key* right_ctrl = new Key("rCtrl",keys);
	Key* menu = new Key("Fn",keys);
	Key* up_arrow = new Key("↑",keys);
	Key* left_arrow = new Key("←",keys);
	Key* right_arrow = new Key("→",keys);
	Key* down_arrow = new Key("↓",keys);
	Key* division_numpad = new Key("Num/",keys);
	Key* multiplication_numpad = new Key("Num*",keys);
	Key* minus_numpad = new Key("Num-",keys);
	Key* plus_numpad = new Key("Num+",keys);
	Key* enter = new Key("← Enter",keys);
	Key* ent = new Key("Ent",keys);
	Key* numpad = new Key("Num\nLock",keys);
	Key* num_7 = new Key("Num7",keys);
	Key* num_8 = new Key("Num8",keys);
	Key* num_9 = new Key("Num9",keys);
	Key* num_4 = new Key("Num4",keys);
	Key* num_5 = new Key("Num5",keys);
	Key* num_6 = new Key("Num6",keys);
	Key* num_1 = new Key("Num1",keys);
	Key* num_2 = new Key("Num2",keys);
	Key* num_3 = new Key("Num3",keys);
	Key* num_0 = new Key("Num0",keys);
	Key* dot_numpad = new Key("Num.",keys);
	QLineEdit* last_pressed = new QLineEdit;
public:
	Keyboard() {
		this->setAttribute(Qt::WA_DeleteOnClose);
		keys["f1"] = f1;
		keys["f2"] = f2;
		keys["f3"] = f3;
		keys["f4"] = f4;
		keys["f5"] = f5;
		keys["f6"] = f6;
		keys["f7"] = f7;
		keys["f8"] = f8;
		keys["f9"] = f9;
		keys["f10"] = f10;
		keys["f11"] = f11;
		keys["f12"] = f12;
		keys["1"] = one;
		keys["2"] = two;
		keys["3"] = three;
		keys["4"] = four;
		keys["5"] = five;
		keys["6"] = six;
		keys["7"] = seven;
		keys["8"] = eight;
		keys["9"] = nine;
		keys["0"] = zero;
		keys["-"] = minus;
		keys["="] = equal;
		keys["`"] = tilda;
		keys["q"] = q;
		keys["w"] = w;
		keys["e"] = e;
		keys["r"] = r;
		keys["t"] = t;
		keys["y"] = y;
		keys["u"] = u;
		keys["i"] = i;
		keys["o"] = o;
		keys["p"] = p;
		keys["["] = left_paranthesis;
		keys["]"] = right_paranthesis;
		keys["\\"] = back_slash;
		keys["a"] = a;
		keys["s"] = s;
		keys["d"] = d;
		keys["f"] = f;
		keys["g"] = g;
		keys["h"] = h;
		keys["j"] = j;
		keys["k"] = k;
		keys["l"] = l;
		keys[";"] = semi_colon;
		keys["'"] = quotaion_marks;
		keys["z"] = z;
		keys["x"] = x;
		keys["c"] = c;
		keys["v"] = v;
		keys["b"] = b;
		keys["n"] = n;
		keys["m"] = m;
		keys[","] = comma;
		keys["."] = dot;
		keys["/"] = slash;
		keys[" "] = space_bar;
		keys["kp_ins"] = num_0;
		keys["kp_end"] = num_1;
		keys["kp_downarrow"] = num_2;
		keys["kp_pgdn"] = num_3;
		keys["kp_leftarrow"] = num_4;
		keys["kp_5"] = num_5;
		keys["kp_rightarrow"] = num_6;
		keys["kp_home"] = num_7;
		keys["kp_uparrow"] = num_8;
		keys["kp_pgup"] = num_9;
		keys["kp_enter"] = ent;
		keys["kp_slash"] = division_numpad;
		keys["kp_multiply"] = multiplication_numpad;
		keys["kp_minus"] = minus_numpad;
		keys["kp_del"] = dot_numpad;
		keys["kp_plus"] = plus_numpad;
		keys["shift"] = shift;
		keys["rshift"] = right_shift;
		keys["uparrow"] = up_arrow;
		keys["downarrow"] = down_arrow;
		keys["leftarrow"] = left_arrow;
		keys["rightarrow"] = right_arrow;
		keys["alt"] = alt;
		keys["ralt"] = right_alt;
		keys["ctrl"] = ctrl;
		keys["rctrl"] = right_ctrl;
		keys["tab"] = tab;
		keys["capslock"] = caps_lock;
		configure_layout();
	}
	void configure_layout(){
		this->setLayout(layout);
		this->adjustSize();
		this->setWindowTitle("Keyboard");
		this->setWindowIcon(QIcon("keyboard.png"));
		this->setFixedSize(this->size());
		QHBoxLayout* lay1 = new QHBoxLayout;
		QHBoxLayout* lay2 = new QHBoxLayout;
		QHBoxLayout* lay3 = new QHBoxLayout;
		QHBoxLayout* lay4 = new QHBoxLayout;
		QHBoxLayout* lay5 = new QHBoxLayout;
		QHBoxLayout* lay6 = new QHBoxLayout;

		last_pressed->setFixedSize(200, 50);
		last_pressed->setDisabled(true);
		last_pressed->setText("Salut sefu");
		esc->setFixedSize(60, 60);
		f1->setFixedSize(50, 30);
		f2->setFixedSize(50, 30);
		f3->setFixedSize(50, 30);
		f4->setFixedSize(50, 30);
		f5->setFixedSize(50, 30);
		f6->setFixedSize(50, 30);
		f7->setFixedSize(50, 30);
		f8->setFixedSize(50, 30);
		f9->setFixedSize(50, 30);
		f10->setFixedSize(50, 30);
		f11->setFixedSize(50, 30);
		f12->setFixedSize(50, 30);
		lay1->addWidget(esc);
		lay1->addSpacing(50);
		lay1->addWidget(f1);
		lay1->addWidget(f2);
		lay1->addWidget(f3);
		lay1->addWidget(f4);
		lay1->addSpacing(50);
		lay1->addWidget(f5);
		lay1->addWidget(f6);
		lay1->addWidget(f7);
		lay1->addWidget(f8);
		lay1->addSpacing(50);
		lay1->addWidget(f9);
		lay1->addWidget(f10);
		lay1->addWidget(f11);
		lay1->addWidget(f12);
		lay1->addSpacing(150);
		//lay1->addWidget(last_pressed);

		tilda->setFixedSize(50, 60);
		one->setFixedSize(60, 60);
		two->setFixedSize(60, 60);
		three->setFixedSize(60, 60);
		four->setFixedSize(60, 60);
		five->setFixedSize(60, 60);
		six->setFixedSize(60, 60);
		seven->setFixedSize(60, 60);
		eight->setFixedSize(60, 60);
		nine->setFixedSize(60, 60);
		zero->setFixedSize(60, 60);
		minus->setFixedSize(60, 60);
		equal->setFixedSize(60, 60);
		numpad->setFixedSize(60, 60);
		division_numpad->setFixedSize(60, 60);
		multiplication_numpad->setFixedSize(60, 60);
		minus_numpad->setFixedSize(60, 60);
		backspace->setFixedSize(150, 60);
		backspace->setDisabled(true);
		lay2->addWidget(tilda);
		lay2->addWidget(one);
		lay2->addWidget(two);
		lay2->addWidget(three);
		lay2->addWidget(four);
		lay2->addWidget(five);
		lay2->addWidget(six);
		lay2->addWidget(seven);
		lay2->addWidget(eight);
		lay2->addWidget(nine);
		lay2->addWidget(zero);
		lay2->addWidget(minus);
		lay2->addWidget(equal);
		lay2->addWidget(backspace);
		lay2->addSpacing(254);
		lay2->addWidget(numpad);
		lay2->addWidget(division_numpad);
		lay2->addWidget(multiplication_numpad);
		lay2->addWidget(minus_numpad);


		tab->setFixedSize(100, 60);
		q->setFixedSize(60, 60);
		w->setFixedSize(60, 60);
		e->setFixedSize(60, 60);
		r->setFixedSize(60, 60);
		t->setFixedSize(60, 60);
		y->setFixedSize(60, 60);
		u->setFixedSize(60, 60);
		i->setFixedSize(60, 60);
		o->setFixedSize(60, 60);
		p->setFixedSize(60, 60);
		left_paranthesis->setFixedSize(60, 60);
		right_paranthesis->setFixedSize(60, 60);
		back_slash->setFixedSize(100, 60);
		num_7->setFixedSize(60, 60);
		num_8->setFixedSize(60, 60);
		num_9->setFixedSize(60, 60);
		plus_numpad->setFixedSize(60, 60);
		lay3->addWidget(tab);
		lay3->addWidget(q);
		lay3->addWidget(w);
		lay3->addWidget(e);
		lay3->addWidget(r);
		lay3->addWidget(t);
		lay3->addWidget(y);
		lay3->addWidget(u);
		lay3->addWidget(i);
		lay3->addWidget(o);
		lay3->addWidget(p);
		lay3->addWidget(left_paranthesis);
		lay3->addWidget(right_paranthesis);
		lay3->addWidget(back_slash);
		lay3->addSpacing(254);
		lay3->addWidget(num_7);
		lay3->addWidget(num_8);
		lay3->addWidget(num_9);
		lay3->addWidget(plus_numpad);


		caps_lock->setFixedSize(100, 60);
		a->setFixedSize(60, 60);
		s->setFixedSize(60, 60);
		d->setFixedSize(60, 60);
		f->setFixedSize(60, 60);
		g->setFixedSize(60, 60);
		h->setFixedSize(60, 60);
		j->setFixedSize(60, 60);
		k->setFixedSize(60, 60);
		l->setFixedSize(60, 60);
		semi_colon->setFixedSize(60, 60);
		quotaion_marks->setFixedSize(60, 60);
		enter->setFixedSize(166, 60);
		enter->setDisabled(true);
		num_4->setFixedSize(60, 60);
		num_5->setFixedSize(60, 60);
		num_6->setFixedSize(60, 60);
		ent->setFixedSize(60, 60);
		plus_numpad->setFixedSize(60, 60);
		lay4->addWidget(caps_lock);
		lay4->addWidget(a);
		lay4->addWidget(s);
		lay4->addWidget(d);
		lay4->addWidget(f);
		lay4->addWidget(g);
		lay4->addWidget(h);
		lay4->addWidget(j);
		lay4->addWidget(k);
		lay4->addWidget(l);
		lay4->addWidget(semi_colon);
		lay4->addWidget(quotaion_marks);
		lay4->addWidget(enter);
		lay4->addSpacing(254);
		lay4->addWidget(num_4);
		lay4->addWidget(num_5);
		lay4->addWidget(num_6);
		lay4->addWidget(ent);

		shift->setFixedSize(130, 60);
		z->setFixedSize(60, 60);
		x->setFixedSize(60, 60);
		c->setFixedSize(60, 60);
		v->setFixedSize(60, 60);
		b->setFixedSize(60, 60);
		n->setFixedSize(60, 60);
		m->setFixedSize(60, 60);
		comma->setFixedSize(60, 60);
		dot->setFixedSize(60, 60);
		slash->setFixedSize(60, 60);
		right_shift->setFixedSize(202, 60);
		up_arrow->setFixedSize(60, 60);
		num_0->setFixedSize(126, 60);
		dot_numpad->setFixedSize(60, 60);
		num_1->setFixedSize(60, 60);
		num_2->setFixedSize(60, 60);
		num_3->setFixedSize(60, 60);
		lay5->addWidget(shift);
		lay5->addWidget(z);
		lay5->addWidget(x);
		lay5->addWidget(c);
		lay5->addWidget(v);
		lay5->addWidget(b);
		lay5->addWidget(n);
		lay5->addWidget(m);
		lay5->addWidget(comma);
		lay5->addWidget(dot);
		lay5->addWidget(slash);
		lay5->addWidget(right_shift);
		lay5->addSpacing(100);
		lay5->addWidget(up_arrow);
		lay5->addSpacing(88);
		lay5->addWidget(num_1);
		lay5->addWidget(num_2);
		lay5->addWidget(num_3);

		ctrl->setFixedSize(60, 60);
		windows->setFixedSize(60, 60);
		windows->setDisabled(true);
		right_windows->setDisabled(true);
		numpad->setDisabled(true);
		alt->setFixedSize(60, 60);
		space_bar->setFixedSize(536, 60);
		right_alt->setFixedSize(60, 60);
		right_windows->setFixedSize(60, 60);
		right_ctrl->setFixedSize(60, 60);
		menu->setFixedSize(60, 60);
		menu->setDisabled(true);
		space_bar->setDisabled(true);
		esc->setDisabled(true);
		left_arrow->setFixedSize(60, 60);
		down_arrow->setFixedSize(60, 60);
		right_arrow->setFixedSize(60, 60);
		lay6->addWidget(ctrl);
		lay6->addWidget(windows);
		lay6->addWidget(alt);
		lay6->addWidget(space_bar);
		lay6->addWidget(right_alt);
		lay6->addWidget(right_windows);
		lay6->addWidget(menu);
		lay6->addWidget(right_ctrl);
		lay6->addSpacing(34);
		lay6->addWidget(left_arrow);
		lay6->addWidget(down_arrow);
		lay6->addWidget(right_arrow);
		lay6->addSpacing(22);
		lay6->addWidget(num_0);
		lay6->addWidget(dot_numpad);
		layout->addRow(lay1);
		layout->addRow(new QFrame(this));
		layout->addRow(new QFrame(this));
		layout->addRow(new QFrame(this));
		layout->addRow(lay2);
		layout->addRow(lay3);
		layout->addRow(lay4);
		layout->addRow(lay5);
		layout->addRow(lay6);
		
	}
	QString lastPressed() {
		for (const auto& key : keys)
			if (key.second->last_pressed != "")
				return key.second->last_pressed;
		return "";
	}
};